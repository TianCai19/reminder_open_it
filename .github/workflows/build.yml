name: Build NotionReminder Apps

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]          # ✅ 放到 push 下面
  pull_request:
    branches: [ main ]
  workflow_dispatch:        # 手动触发（可选）

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python-version: [ '3.11' ]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build with PyInstaller (macOS)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          ICON_ARG=""
          [[ -f assets/icon.icns ]] && ICON_ARG="--icon assets/icon.icns"
          ADD_DATA=""
          [[ -f assets/sun-valley.tcl ]] && ADD_DATA="--add-data assets/sun-valley.tcl:."
          pyinstaller \
            --name "NotionReminder" \
            --windowed \
            --noconfirm \
            $ICON_ARG \
            $ADD_DATA \
            notion_reminder_gui.py
          ditto -c -k --sequesterRsrc --keepParent "dist/NotionReminder.app" "NotionReminder-macOS.zip"
      - name: Upload artifact (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: NotionReminder-macOS
          path: NotionReminder-macOS.zip

      - name: Build with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          # 构建基本命令
          $cmd = @(
            "pyinstaller",
            "--name", "NotionReminder",
            "--windowed",
            "--noconfirm",
            "--onefile"
          )
          
          # 检查并添加图标
          if (Test-Path "assets/icon.ico") {
            $cmd += "--icon", "assets/icon.ico"
          }
          
          # 检查并添加数据文件
          if (Test-Path "assets/sun-valley.tcl") {
            $cmd += "--add-data", "assets/sun-valley.tcl;."
          }
          
          # 添加主脚本
          $cmd += "notion_reminder_gui.py"
          
          # 执行构建命令
          & $cmd[0] $cmd[1..($cmd.Length-1)]
          
          # 压缩可执行文件
          Compress-Archive -Path "dist/NotionReminder.exe" -DestinationPath "NotionReminder-Windows.zip"
      - name: Upload artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: NotionReminder-Windows
          path: NotionReminder-Windows.zip

  release:
    name: Release on tag
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/NotionReminder-macOS/NotionReminder-macOS.zip
            artifacts/NotionReminder-Windows/NotionReminder-Windows.zip
          draft: false
          prerelease: false
