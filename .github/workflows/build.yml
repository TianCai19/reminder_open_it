name: Build NotionReminder Apps

on:
  push:
    branches: [ main ]
    paths:
      - "**.py"
      - "assets/**"
      - ".github/workflows/build.yml"
  pull_request:
  tags:
    - "v*"

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      # 可选：如果你有第三方主题文件，放在 assets/ 里一起带上
      - name: Build with PyInstaller (macOS)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          ICON_ARG=""
          [[ -f assets/icon.icns ]] && ICON_ARG="--icon assets/icon.icns"
          ADD_DATA=""
          [[ -f assets/sun-valley.tcl ]] && ADD_DATA="--add-data assets/sun-valley.tcl:."
          pyinstaller \
            --name "NotionReminder" \
            --windowed \
            --noconfirm \
            $ICON_ARG \
            $ADD_DATA \
            notion_reminder_gui.py
          # 产物标准化为 zip
          ditto -c -k --sequesterRsrc --keepParent "dist/NotionReminder.app" "NotionReminder-macOS.zip"

      - name: Build with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          $iconArg = ""
          if (Test-Path assets/icon.ico) { $iconArg = "--icon assets/icon.ico" }
          $addData = ""
          if (Test-Path assets/sun-valley.tcl) { $addData = "--add-data `"assets/sun-valley.tcl;.`"" }
          pyinstaller `
            --name NotionReminder `
            --windowed `
            --noconfirm `
            $iconArg `
            $addData `
            notion_reminder_gui.py
          Compress-Archive -Path "dist/NotionReminder/*" -DestinationPath "NotionReminder-Windows.zip"

      - name: Upload artifact (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: NotionReminder-macOS
          path: NotionReminder-macOS.zip
          if-no-files-found: error

      - name: Upload artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: NotionReminder-Windows
          path: NotionReminder-Windows.zip
          if-no-files-found: error

  release:
    name: Release on tag
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/NotionReminder-macOS/NotionReminder-macOS.zip
            artifacts/NotionReminder-Windows/NotionReminder-Windows.zip
          draft: false
          prerelease: false

